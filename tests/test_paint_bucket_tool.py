import pytest
from scripts.paint_bucket_tool import paint_bucket, paint_core


@pytest.mark.parametrize('image, row, column, new_color, expected',[
    (
        [
            [".","#","#","#",".","."],
            [".","#",".",".","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
        0,
        1,
        "O",
        [
            [".","O","O","O",".","."],
            [".","O",".",".","#","."],
            [".","O","O","O",".","."],
            [".","O",".",".",".","."]
        ]
    ),
    (
        [
            [".","#","#","#",".","."],
            [".","#",".",".","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
        1,
        3,
        "o",
        [
            [".","#","#","#",".","."],
            [".","#","o","o","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
    ),
    (
        [
            [".","#","#","#",".","."],
            [".","#",".",".","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
        1,
        3,
        "#",
        [
            [".","#","#","#",".","."],
            [".","#","#","#","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
    ),
])
def test_paint_bucket(image, row, column, new_color, expected):
    """Unit test for paint_bucket function"""
    result = paint_bucket(image, row, column, new_color)
    assert result == expected


@pytest.mark.parametrize('image, row, column, color, new_color, expected',[
    (
        [
            [".","#","#","#",".","."],
            [".","#",".",".","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
        0,
        1,
        "#",
        "O",
        [
            [".","O","O","O",".","."],
            [".","O",".",".","#","."],
            [".","O","O","O",".","."],
            [".","O",".",".",".","."]
        ]
    ),
    (
        [
            [".","#","#","#",".","."],
            [".","#",".",".","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
        1,
        3,
        ".",
        "o",
        [
            [".","#","#","#",".","."],
            [".","#","o","o","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
    ),
    (
        [
            [".","#","#","#",".","."],
            [".","#",".",".","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
        1,
        3,
        ".",
        "#",
        [
            [".","#","#","#",".","."],
            [".","#","#","#","#","."],
            [".","#","#","#",".","."],
            [".","#",".",".",".","."]
        ],
    ),
])
def test_paint_core(image, row, column, color, new_color, expected):
    """Unit test for paint_core function"""
    paint_core(image, row, column, color, new_color)
    assert image == expected
